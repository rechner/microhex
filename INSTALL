Before building application, make sure that all required programs and components are installed on your
system. See REQUIREMENTS file for details.

First step is to set proper values in config.pri file. Here you should adjust paths to tools used by build system and
set directory where Microhex files will be installed.

Next step is to compile translation files. If you only need English, you can skip this step.
Open a console in source root directory. If you want to compile all available translations, run the following command:
    lrelease microhex.pro
or go to src/translations directory and compile only desired translation files by running
    lrelease TRANSLATION_FILE
where TRANSLATION_FILE is one of translation files (*.ts) provided with application.

Final step. Open console in source root directory (where 'docs' and 'src' directories are located).
Run following commands:
    mkdir build && cd build
    qmake ..
    make install
Depending on system configuration, last command may be different (for example, mingw32-make if you are using MinGW).
After installation is complete, you can safely remove created 'build' directory with temporary files.

Now you can start Microhex by executing command in directory where Microhex had been installed:
    python3 ./microhex.py
or by double-clicking on microhex.py icon if you are using Windows and .py files are associated with Python 3.x
interpreter.

NOTE:
If you are using PyQt4 >= 4.10 and get error like this while executing 'make' step:
    cannot import module pyqtconfig
you should rebuild PyQt from sources using its old-style configure.py script instead of recommended
configure-ng.py. This will enable currently deprecated pyqtconfig module required for Microhex to build.